{"ast":null,"code":"import _defineProperty from \"D:\\\\wamp64\\\\www\\\\platzi\\\\platzi-badges\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"D:\\\\wamp64\\\\www\\\\platzi\\\\platzi-badges\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"D:\\\\wamp64\\\\www\\\\platzi\\\\platzi-badges\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\wamp64\\\\www\\\\platzi\\\\platzi-badges\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\wamp64\\\\www\\\\platzi\\\\platzi-badges\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\wamp64\\\\www\\\\platzi\\\\platzi-badges\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\wamp64\\\\www\\\\platzi\\\\platzi-badges\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\wamp64\\\\www\\\\platzi\\\\platzi-badges\\\\src\\\\pages\\\\BadgeNew.js\";\nimport React from 'react';\nimport './styles/BadgeNew.css';\nimport header from \"../images/badge-header.svg\";\nimport Badge from '../components/Badge';\nimport BadgeForm from '../components/BadgeForm';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Table, Button, Container, Modal, ModalHeader, ModalBody, FormGroup, ModalFooter } from \"reactstrap\";\nvar data = [{\n  id: 1,\n  personaje: \"Naruto\",\n  anime: \"Naruto\"\n}, {\n  id: 2,\n  personaje: \"Goku\",\n  anime: \"Dragon Ball\"\n}, {\n  id: 3,\n  personaje: \"Kenshin Himura\",\n  anime: \"Rurouni Kenshin\"\n}, {\n  id: 4,\n  personaje: \"Monkey D. Luffy\",\n  anime: \"One Piece\"\n}, {\n  id: 5,\n  personaje: \"Edward Elric\",\n  anime: \"Fullmetal Alchemist: Brotherhood\"\n}, {\n  id: 6,\n  personaje: \"Seto Kaiba\",\n  anime: \"Yu-Gi-Oh!\"\n}];\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: data,\n      modalActualizar: false,\n      modalInsertar: false,\n      form: {\n        id: \"\",\n        personaje: \"\",\n        anime: \"\"\n      }\n    };\n\n    _this.mostrarModalActualizar = function (dato) {\n      _this.setState({\n        form: dato,\n        modalActualizar: true\n      });\n    };\n\n    _this.cerrarModalActualizar = function () {\n      _this.setState({\n        modalActualizar: false\n      });\n    };\n\n    _this.mostrarModalInsertar = function () {\n      _this.setState({\n        modalInsertar: true\n      });\n    };\n\n    _this.cerrarModalInsertar = function () {\n      _this.setState({\n        modalInsertar: false\n      });\n    };\n\n    _this.editar = function (dato) {\n      var contador = 0;\n      var arreglo = _this.state.data;\n      arreglo.map(function (registro) {\n        if (dato.id == registro.id) {\n          arreglo[contador].personaje = dato.personaje;\n          arreglo[contador].anime = dato.anime;\n        }\n\n        contador++;\n      });\n\n      _this.setState({\n        data: arreglo,\n        modalActualizar: false\n      });\n    };\n\n    _this.eliminar = function (dato) {\n      var opcion = window.confirm(\"EstÃ¡s Seguro que deseas Eliminar el elemento \" + dato.id);\n\n      if (opcion == true) {\n        var contador = 0;\n        var arreglo = _this.state.data;\n        arreglo.map(function (registro) {\n          if (dato.id == registro.id) {\n            arreglo.splice(contador, 1);\n          }\n\n          contador++;\n        });\n\n        _this.setState({\n          data: arreglo,\n          modalActualizar: false\n        });\n      }\n    };\n\n    _this.insertar = function () {\n      var valorNuevo = _objectSpread({}, _this.state.form);\n\n      valorNuevo.id = _this.state.data.length + 1;\n      var lista = _this.state.data;\n      lista.push(valorNuevo);\n\n      _this.setState({\n        modalInsertar: false,\n        data: lista\n      });\n    };\n\n    _this.handleChange = function (e) {\n      _this.setState({\n        form: _objectSpread({}, _this.state.form, _defineProperty({}, e.target.name, e.target.value))\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(React.Fragment, null, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: metriplica,\n        alt: \"logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }), React.createElement(Button, {\n        color: \"success\",\n        onClick: function onClick() {\n          return _this2.mostrarModalInsertar();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Crear\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"ID\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Nombre\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"UserName\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Acci\\xF3n\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, this.state.data.map(function (dato) {\n        return React.createElement(\"tr\", {\n          key: dato.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, dato.id), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, dato.personaje), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }, dato.anime), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, React.createElement(Button, {\n          color: \"primary\",\n          onClick: function onClick() {\n            return _this2.mostrarModalActualizar(dato);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, \"Editar\"), \" \", React.createElement(Button, {\n          color: \"danger\",\n          onClick: function onClick() {\n            return _this2.eliminar(dato);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, \"Eliminar\")));\n      })))), React.createElement(Modal, {\n        isOpen: this.state.modalActualizar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"Editar Registro\"))), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"Id:\"), React.createElement(\"input\", {\n        className: \"form-control\",\n        readOnly: true,\n        type: \"text\",\n        value: this.state.form.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \"Personaje:\"), React.createElement(\"input\", {\n        className: \"form-control\",\n        name: \"personaje\",\n        type: \"text\",\n        onChange: this.handleChange,\n        value: this.state.form.personaje,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"Anime:\"), React.createElement(\"input\", {\n        className: \"form-control\",\n        name: \"anime\",\n        type: \"text\",\n        onChange: this.handleChange,\n        value: this.state.form.anime,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }))), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this2.editar(_this2.state.form);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"Editar\"), React.createElement(Button, {\n        color: \"danger\",\n        onClick: function onClick() {\n          return _this2.cerrarModalActualizar();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, \"Cancelar\"))), React.createElement(Modal, {\n        isOpen: this.state.modalInsertar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \"Insertar Personaje\"))), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, \"Id:\"), React.createElement(\"input\", {\n        className: \"form-control\",\n        readOnly: true,\n        type: \"text\",\n        value: this.state.data.length + 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, \"Personaje:\"), React.createElement(\"input\", {\n        className: \"form-control\",\n        name: \"personaje\",\n        type: \"text\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, \"Anime:\"), React.createElement(\"input\", {\n        className: \"form-control\",\n        name: \"anime\",\n        type: \"text\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }))), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this2.insertar();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, \"Insertar\"), React.createElement(Button, {\n        className: \"btn btn-danger\",\n        onClick: function onClick() {\n          return _this2.cerrarModalInsertar();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, \"Cancelar\"))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default BadgeNew;","map":{"version":3,"sources":["D:\\wamp64\\www\\platzi\\platzi-badges\\src\\pages\\BadgeNew.js"],"names":["React","Badge","BadgeForm","Table","Button","Container","Modal","ModalHeader","ModalBody","FormGroup","ModalFooter","data","id","personaje","anime","App","state","modalActualizar","modalInsertar","form","mostrarModalActualizar","dato","setState","cerrarModalActualizar","mostrarModalInsertar","cerrarModalInsertar","editar","contador","arreglo","map","registro","eliminar","opcion","window","confirm","splice","insertar","valorNuevo","length","lista","push","handleChange","e","target","name","value","metriplica","Component","BadgeNew"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport './styles/BadgeNew.css';\r\nimport header from '../images/badge-header.svg';\r\nimport Badge from '../components/Badge';\r\nimport BadgeForm from '../components/BadgeForm';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  Table,\r\n  Button,\r\n  Container,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  FormGroup,\r\n  ModalFooter,\r\n} from \"reactstrap\";\r\n\r\nconst data = [\r\n  { id: 1, personaje: \"Naruto\", anime: \"Naruto\" },\r\n  { id: 2, personaje: \"Goku\", anime: \"Dragon Ball\" },\r\n  { id: 3, personaje: \"Kenshin Himura\", anime: \"Rurouni Kenshin\" },\r\n  { id: 4, personaje: \"Monkey D. Luffy\", anime: \"One Piece\" },\r\n  { id: 5, personaje: \"Edward Elric\", anime: \"Fullmetal Alchemist: Brotherhood\"},\r\n  { id: 6, personaje: \"Seto Kaiba\", anime: \"Yu-Gi-Oh!\" },\r\n];\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    data: data,\r\n    modalActualizar: false,\r\n    modalInsertar: false,\r\n    form: {\r\n      id: \"\",\r\n      personaje: \"\",\r\n      anime: \"\",\r\n    },\r\n  };\r\n\r\n  mostrarModalActualizar = (dato) => {\r\n    this.setState({\r\n      form: dato,\r\n      modalActualizar: true,\r\n    });\r\n  };\r\n\r\n  cerrarModalActualizar = () => {\r\n    this.setState({ modalActualizar: false });\r\n  };\r\n\r\n  mostrarModalInsertar = () => {\r\n    this.setState({\r\n      modalInsertar: true,\r\n    });\r\n  };\r\n\r\n  cerrarModalInsertar = () => {\r\n    this.setState({ modalInsertar: false });\r\n  };\r\n\r\n  editar = (dato) => {\r\n    var contador = 0;\r\n    var arreglo = this.state.data;\r\n    arreglo.map((registro) => {\r\n      if (dato.id == registro.id) {\r\n        arreglo[contador].personaje = dato.personaje;\r\n        arreglo[contador].anime = dato.anime;\r\n      }\r\n      contador++;\r\n    });\r\n    this.setState({ data: arreglo, modalActualizar: false });\r\n  };\r\n\r\n  eliminar = (dato) => {\r\n    var opcion = window.confirm(\"EstÃ¡s Seguro que deseas Eliminar el elemento \"+dato.id);\r\n    if (opcion == true) {\r\n      var contador = 0;\r\n      var arreglo = this.state.data;\r\n      arreglo.map((registro) => {\r\n        if (dato.id == registro.id) {\r\n          arreglo.splice(contador, 1);\r\n        }\r\n        contador++;\r\n      });\r\n      this.setState({ data: arreglo, modalActualizar: false });\r\n    }\r\n  };\r\n\r\n  insertar= ()=>{\r\n    var valorNuevo= {...this.state.form};\r\n    valorNuevo.id=this.state.data.length+1;\r\n    var lista= this.state.data;\r\n    lista.push(valorNuevo);\r\n    this.setState({ modalInsertar: false, data: lista });\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      form: {\r\n        ...this.state.form,\r\n        [e.target.name]: e.target.value,\r\n      },\r\n    });\r\n  };\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <>\r\n        <Container>\r\n        <img src={metriplica} alt=\"logo\"/>\r\n        <br />\r\n          <Button color=\"success\" onClick={()=>this.mostrarModalInsertar()}>Crear</Button>\r\n          <br />\r\n          <br />\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Nombre</th>\r\n                <th>UserName</th>\r\n                <th>AcciÃ³n</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {this.state.data.map((dato) => (\r\n                <tr key={dato.id}>\r\n                  <td>{dato.id}</td>\r\n                  <td>{dato.personaje}</td>\r\n                  <td>{dato.anime}</td>\r\n                  <td>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      onClick={() => this.mostrarModalActualizar(dato)}\r\n                    >\r\n                      Editar\r\n                    </Button>{\" \"}\r\n                    <Button color=\"danger\" onClick={()=> this.eliminar(dato)}>Eliminar</Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n\r\n        <Modal isOpen={this.state.modalActualizar}>\r\n          <ModalHeader>\r\n           <div><h3>Editar Registro</h3></div>\r\n          </ModalHeader>\r\n\r\n          <ModalBody>\r\n            <FormGroup>\r\n              <label>\r\n               Id:\r\n              </label>\r\n            \r\n              <input\r\n                className=\"form-control\"\r\n                readOnly\r\n                type=\"text\"\r\n                value={this.state.form.id}\r\n              />\r\n            </FormGroup>\r\n            \r\n            <FormGroup>\r\n              <label>\r\n                Personaje: \r\n              </label>\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"personaje\"\r\n                type=\"text\"\r\n                onChange={this.handleChange}\r\n                value={this.state.form.personaje}\r\n              />\r\n            </FormGroup>\r\n            \r\n            <FormGroup>\r\n              <label>\r\n                Anime: \r\n              </label>\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"anime\"\r\n                type=\"text\"\r\n                onChange={this.handleChange}\r\n                value={this.state.form.anime}\r\n              />\r\n            </FormGroup>\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button\r\n              color=\"primary\"\r\n              onClick={() => this.editar(this.state.form)}\r\n            >\r\n              Editar\r\n            </Button>\r\n            <Button\r\n              color=\"danger\"\r\n              onClick={() => this.cerrarModalActualizar()}\r\n            >\r\n              Cancelar\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n\r\n\r\n\r\n        <Modal isOpen={this.state.modalInsertar}>\r\n          <ModalHeader>\r\n           <div><h3>Insertar Personaje</h3></div>\r\n          </ModalHeader>\r\n\r\n          <ModalBody>\r\n            <FormGroup>\r\n              <label>\r\n                Id: \r\n              </label>\r\n              \r\n              <input\r\n                className=\"form-control\"\r\n                readOnly\r\n                type=\"text\"\r\n                value={this.state.data.length+1}\r\n              />\r\n            </FormGroup>\r\n            \r\n            <FormGroup>\r\n              <label>\r\n                Personaje: \r\n              </label>\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"personaje\"\r\n                type=\"text\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </FormGroup>\r\n            \r\n            <FormGroup>\r\n              <label>\r\n                Anime: \r\n              </label>\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"anime\"\r\n                type=\"text\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </FormGroup>\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button\r\n              color=\"primary\"\r\n              onClick={() => this.insertar()}\r\n            >\r\n              Insertar\r\n            </Button>\r\n            <Button\r\n              className=\"btn btn-danger\"\r\n              onClick={() => this.cerrarModalInsertar()}\r\n            >\r\n              Cancelar\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BadgeNew;\r\n"]},"metadata":{},"sourceType":"module"}